// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
// Autogenerated by goscinny extractor -t CreateMetricsRequest DO NOT EDIT
package contracts

import (
	"github.com/govindarajan/anomalydetection/model"
	"github.com/labstack/echo"
)

// ExtractFromHTTP reads http request body and fills the object
func (_receiver *CreateMetricsRequest) ExtractFromHTTP(c echo.Context) *Error {
	request := c.Request()
	contentType := request.Header.Get("content-type")
	if request.ContentLength > 0 {
		if err := ContentDecoder(contentType)(request.Body).Decode(_receiver); err != nil {
			if _, ok := err.(Error); ok {
				return ErrBadRequestInvalidParameter("request format is invalid")
			}
			return ErrBadRequestInvalidBody(err.Error())
		}
	}
	_request__tmp := new(Request)
	if _request_, ok := interface{}(_receiver.Request).(Extractor); ok {
		_receiver.Request = new(Request)
		if err := _request_.ExtractFromHTTP(c); err != nil {
			return err
		}
		if *_receiver.Request == *_request__tmp {
			_receiver.Request = nil
		}
	}
	_modelanomaly__tmp := new(model.Anomaly)
	if _modelanomaly_, ok := interface{}(_receiver.Anomaly).(Extractor); ok {
		_receiver.Anomaly = new(model.Anomaly)
		if err := _modelanomaly_.ExtractFromHTTP(c); err != nil {
			return err
		}
		if *_receiver.Anomaly == *_modelanomaly__tmp {
			_receiver.Anomaly = nil
		}
	}
	return nil
}
